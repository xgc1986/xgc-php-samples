<html>
<head>
    {{ xgc_assetic('all') }}

    <style>
        .prettyprint {
            border-radius: 3px;
        }
    </style>
</head>
<body>


<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-3">Xgc Samples Page</h1>
        <p class="lead">This is a simple hero unit, a simple jumbotron-style component for calling extra attention to
            featured content or information.</p>
        <hr class="my-4">
        <p>It uses utility classes for typography and spacing to space content out within the larger container.</p>
        <p class="lead">
            <a class="btn btn-primary btn-lg" href="https://github.com/xgc1986" role="button"><i class="fa fa-github" target="_blank"> </i></a>
            <a class="btn btn-primary btn-lg" href="https://www.linkedin.com/in/javiergonzalezcuadrado" role="button" target="_blank"><i class="fa fa-linkedin"> </i></a>

        </p>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h2>Libraries</h2>
            <ul>
                <li><a href="#carbon">Carbon Bundle</a> <a href="github>"><i class="fa fa-github"></i></a></li>
                <li><a href="#prettify">Prettify Bundle</a> <a href="github>"><i class="fa fa-github"></i></a></li>
                <li><a href="#php-config">PHP Config</a> <a href="github>"><i class="fa fa-github"></i></a></li>
                <li><a href="#assetics">Xgc Assetic Bundle</a> <a href="github>"><i class="fa fa-github"></i></a></li>
            </ul>
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-lg-12">
            <h2 id="carbon">Carbon Bundle</h2>

            <p>A PHP library that integrates <a href="https://github.com/briannesbitt/Carbon" target="_blank">Carbon</a> with Symfony</p>

            <p>Actually supports:</p>
            <p>
                <ul class="fa-ul">
                    <li>
                        <h4><i class="fa-li fa fa-code"></i>Doctrine</h4>
                        {% code %}
&nbsp;
/**
 * @var Carbon
 *
 * @ORM/Column(type="carbon")
 */
protected $createdAt;
                        {% endcode %}
                    </li>
                    <li>
                        <h4><i class="fa-li fa fa-code"></i>ParamConverter</h4>
                        {% code %}
&nbsp;
/**
 * @Route("/post/{date}")
 * @Method("GET")
 */
public function postAction(Carbon $date)
{
    //...
}
                        {% endcode %}
                    </li>
                    <li>
                        <h4><i class="fa-li fa fa-code"></i>Forms</h4>
                        {% code %}
&nbsp;
/**
 * @Route("/")
 * @Method("GET")
 * @Template()
 *
 * @param Request $request
 *
 * @return array|RedirectResponse
 */
public function indexAction(Request $request)
{
    $carbonModel = new CarbonLog();
    $carbonModel->setDate(Carbon::instance(Factory::create()->dateTime));

    $form = $this->createFormBuilder($carbonModel, ['method' => 'POST'])
                 ->add('date', CarbonType::class, ['widget' => 'single_text'])
                 ->add('send', SubmitType::class)
                 ->getForm();

    $form->handleRequest($request);

    if ($form->isSubmitted() && $form->isValid()) {
        $carbonModel = $form->getData();

        return $this->redirectToRoute('app_carbon_carbon_carbon', ['date' => $carbonModel->getDate()]);
    }

    return [
        'form' => $form->createView(),
    ];
}
                        {% endcode %}
                    </li>
                </ul>
            </p>
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-lg-12">
            <h2 id="prettify">Prettify Bundle</h2>
            <p>
                Php library that help to put syntax higlighters with ease with twig, By the date only uses code-prettifier, but is
                intended to use another synax higlighters and themes on a future.
            </p>

            {% code %}
&nbsp;
&lbrace;% code %&rbrace;
    function log(string $word)
    {
        echo $word . PHP_EOL;
    }
&lbrace;% endcode %&rbrace;
            {%  endcode %}
            <p>Actually this code is done using Prettify Bundle</p>
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-lg-12">
            <h2 id="php-config">PHP Config</h2>
            <p>
                Php-Config allows to access to the values stored in php.ini file, and provides better readibility to
                some of them, as for example read the maximum file size can ve be uploaded.
            </p>

            {% code %}
&nbsp;
/* gets the maximum file size that can be uploaded in bytes */
echo Config::uploadMaxFileSize();
// 2097152

/* gets the maximum file size that can be uploaded as is stored in php.ini */
echo Config::load(Config::MAX_FILE_SIZE);
// "2M"

echo Config::load('session.name');
// "PHPSESSID"
            {%  endcode %}
        </div>
    </div>

    <hr>

    <div class="row">
        <div class="col-lg-12">
            <h2 id="assetics">Xgc Assetic Bundle</h2>
            <p>
                Xgc Assetic Bundle Allows to manage js and css without remembering where are you using them. For example
                I can create a group of resources to use, as for example bootstrap

                {% code %}
&nbsp;
bootstrap4_full:
  - 'jquery'
  - 'popper'
  - 'https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/js/bootstrap.min.js'
  - 'bootstrap4'

bootstrap4:
  - 'https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css'

jquery:
  - 'https://code.jquery.com/jquery-3.2.1.min.js'

popper:
  - 'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js'
                {%  endcode %}

                {% code %}
&lt;html&gt;
&lt;head&gt;
    &lt;!-- in order, includes: jquery, popper, bootstrap js and bootsrap css --&gt;
    &lbrace;&lbrace; xgc_assetic('bootstrap_full') &rbrace;&rbrace;
&lt;/head&gt;
&lt;body&gt;
    ...
&lt;/body&gt;
&lt;/html&gt;
                {%  endcode %}
            </p>
        </div>
    </div>
</div>
{#<img src="holder.js/300x200?random=yes"><img src="holder.js/300x200?random=yes"><img src="holder.js/300x200?random=yes"><img src="holder.js/300x200?random=yes"><img src="holder.js/300x200?random=yes">#}

</body>
</html>
